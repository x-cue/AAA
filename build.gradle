plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

apply from: 'scripts/encryptStrings.gradle'
apply from: 'scripts/remapManifest.gradle'
apply from: 'scripts/obfuscate.gradle'

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "aaa" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

configurations {
    yguard
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // String encryption
    //implementation 'org.jasypt:jasypt:1.9.3'

    // Obfuscation
    yguard 'com.yworks:yguard:4.1.1'
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

shadowJar {
    archiveClassifier.set('shadow')

    dependencies {
        include(dependency('org.jasypt:jasypt:1.9.3'))
    }

    // Use the original JAR as the base for shadowing
    from(tasks.jar) {
        // This will include everything from the original JAR
        include '**/*'
    }

    manifest {
        from(tasks.jar.manifest)
    }

    mergeServiceFiles() // Merge service files in META-INF/services
    minimize() // Optional: remove unused classes, if desired

    finalizedBy encryptStrings
}

// Ensure the build process includes shadowJar
tasks.named('build').configure {
    finalizedBy tasks.named('shadowJar')
}

// Ensure encryptStrings runs after shadowJar
tasks.named('encryptStrings').configure {
    dependsOn tasks.named('shadowJar')
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

tasks.build.dependsOn obfuscate

// Disable old tasks Not in use anymore
//obfuscate.setEnabled(false)
remapManifest.setEnabled(false)
shadowJar.setEnabled(false)
encryptStrings.setEnabled(false)

//remapManifest.dependsOn obfuscate
//build.finalizedBy remapManifest

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}